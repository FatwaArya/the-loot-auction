generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ItemsBidders {
  id              String        @id @default(cuid())
  bidAmount       Int
  bidderId        String        @map("bidderId")
  merchantItemsId String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  bidder          User          @relation(fields: [bidderId], references: [id])
  MerchantItems   MerchantItems @relation(fields: [merchantItemsId], references: [id])
}

model MerchantItems {
  id          String         @id @default(cuid())
  createdAt   DateTime       @default(now())
  description String
  image       String
  itemName    String
  price       Int
  status      Status         @default(AVAILABLE)
  updatedAt   DateTime       @updatedAt
  userId      String
  User        User           @relation(fields: [userId], references: [id])
  bidders     ItemsBidders[]
  OwnedItems  OwnedItems[]
}

model OwnedItems {
  id              String        @id @default(cuid())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  merchantItemsId String
  userId          String
  MerchantItems   MerchantItems @relation(fields: [merchantItemsId], references: [id])
  User            User          @relation(fields: [userId], references: [id])
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  role          Role            @default(USER)
  accounts      Account[]
  ItemsBidders  ItemsBidders[]
  merchantItems MerchantItems[]
  ownedItems    OwnedItems[]
  sessions      Session[]
}

model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  MERCHANT
  USER
}

enum Status {
  AVAILABLE
  SOLD
}
